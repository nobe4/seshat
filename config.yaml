---
# `font` is the folder containing the fonts to test.
font: examples/fonts/Fira-Sans

# `output` is the path to the output PDF.
output: examples/output.pdf

# `rules` is a dictionary of default rules for the renders.
# Each rule can override these values in their rules.
rules:
  # `width` is the width of the output PDF in mm.
  width: 210

  # `height` is the height of the output PDF in mm.
  height: 297

  # `size` is the size of the text in pt.
  size: 30

  # `margins` is the margin of the text in mm.
  # It works like CSS margin:
  # - [ 10 ]: 10mm on all sides
  # - [ 10, 20 ]: 10mm on top and bottom, 20mm on left and right
  # - [ 10, 20, 30 ]: 10mm on top, 20mm on left and right, 30mm on bottom
  # - [ 10, 20, 30, 40 ]: 10mm on top, 20mm on right, 30mm on bottom, 40mm on left
  # Set to [ 0 ] to reset.
  margins: [ 20 ]

  # `features` is a comma-separated list of OpenType features.
  # Use `none` to disable all features.
  # See https://en.wikipedia.org/wiki/List_of_typographic_features
  features: none

  # `responsive` is a boolean to enable or disable the responsive mode.
  # When enabled, the text will be scaled up and down to fit the grid in the
  # PDF. This prevents line breaks and text overflow.
  # It pertains only to the `text` rule.
  responsive: false

  # `columns` is the number of columns in the grid.
  # It pertains only to the `grid` rule.
  columns: 3

# `renders` is a list of render to apply to the output PDF.
# Each render has at least a `type` and an `inputs` key.
renders:

  # `text` writes the given text in each available font.
  - type: text

    # `rules` is a dictionary of rules to pass to the render.
    # They override the default rules defined above.
    rules:
      # features: zero, smcp
      # size: 40
      margins: [ 5 ]

    # `inputs` is a list of strings to write in the PDF.
    # Each string is written in each available font.
    inputs:
      - testing 3.14 ff ll ii 0O
      - testing 3.14 ff ll ii 0O
      - testing 3.14 ff ll ii 0O

  # `grid` create a grid of all available characters in each available font.
  # It will scale down the text to fit the grid in the PDF.
  - type: grid
    # `inputs` is a list of strings to write as a grid in the PDF.
    # Each string is written in each available font.
    inputs:
      - 0
      - a
      - b
      - c
      - d

  # Examples:

  - type: text
    rules:
      responsive: true
    inputs:
      - 0123456789
      - abcdefghijklmnopqrstuvwxyz
      - font
      - Lorem ipsum dolor sit amet, consectetur adipiscing elit.
      - The quick brown fox jumps over a lazy dog.
      - Voix ambiguë d’un cœur qui au zéphyr préfère les jattes de kiwis.
      - Victor jagt zwölf Boxkämpfer quer über den großen Sylter Deich.
      - Pchnąć w tę łódź jeża lub ośm skrzyń fig.

      # Write paragraphs with a pipe `|` at the end of the line.
      - |
        Lorem ipsum odor amet, consectetuer adipiscing elit. Neque montes nam
        lorem class fringilla integer lacus pellentesque enim. Integer metus
        integer tristique class ad montes. Maximus elit vitae lacus ac vel
        hendrerit tristique. Blandit suscipit id non aliquet proin. Mattis
        senectus magnis suscipit habitant a at commodo fusce. Eget dictumst dis
        feugiat fermentum rutrum mollis mattis massa. Natoque non nostra
        curabitur malesuada magna ligula.

  - type: grid
    rules:
      size: 100
      columns: 2
      features: smcp, subs
    inputs:
      - 012
      - abc
      - éèêë
      - çùûü
